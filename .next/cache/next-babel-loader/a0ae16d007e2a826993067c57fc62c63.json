{"ast":null,"code":"import _Reflect$construct from \"@babel/runtime-corejs2/core-js/reflect/construct\";\nimport _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function () { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = _Reflect$construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !_Reflect$construct) return false; if (_Reflect$construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(_Reflect$construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport styles from './styles.scss';\n\nvar SelectZone = /*#__PURE__*/function (_React$Component) {\n  _inherits(SelectZone, _React$Component);\n\n  var _super = _createSuper(SelectZone);\n\n  function SelectZone(props) {\n    var _this;\n\n    _classCallCheck(this, SelectZone);\n\n    _this = _super.call(this, props);\n    _this.zones = ['Capital Federal', 'Zona Norte', 'Zona Sur', 'Campana'];\n    _this.state = {\n      selectedZone: _this.zones[0],\n      active: false,\n      zones: _this.zones,\n      inputValue: ''\n    };\n    return _this;\n  }\n\n  _createClass(SelectZone, [{\n    key: \"componentDidMount\",\n    value: function () {\n      var _componentDidMount = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        var getZones, getZonesJson;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return fetch('http://localhost:3000/api/zones');\n\n              case 2:\n                getZones = _context.sent;\n                _context.next = 5;\n                return getZones.json();\n\n              case 5:\n                getZonesJson = _context.sent;\n                console.log('zonas', getZonesJson);\n\n              case 7:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      function componentDidMount() {\n        return _componentDidMount.apply(this, arguments);\n      }\n\n      return componentDidMount;\n    }()\n  }, {\n    key: \"handleClick\",\n    value: function handleClick() {\n      var currentState = this.state.active;\n      this.setState({\n        active: !currentState\n      });\n    }\n  }, {\n    key: \"handleChange\",\n    value: function handleChange(position) {\n      this.setState({\n        selectedZone: this.zones[position],\n        active: false,\n        inputValue: \"\",\n        zones: this.zones\n      });\n    }\n  }, {\n    key: \"filterZones\",\n    value: function filterZones(e) {\n      var value = e.target.value;\n      var result = this.state.zones.filter(function (z) {\n        return z.toLowerCase().indexOf(value.toLowerCase()) > -1;\n      });\n      this.setState({\n        inputValue: value,\n        zones: result\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$state = this.state,\n          selectedZone = _this$state.selectedZone,\n          active = _this$state.active,\n          zones = _this$state.zones,\n          inputValue = _this$state.inputValue;\n      return __jsx(\"div\", {\n        className: styles.selectedZoneContainer\n      }, __jsx(\"div\", {\n        className: styles.selectedZone,\n        onClick: function onClick() {\n          return _this2.handleClick();\n        }\n      }, __jsx(\"span\", null, selectedZone)), __jsx(\"div\", {\n        className: active ? \"\".concat(styles.listContainer, \" \").concat(styles.visible) : styles.listContainer\n      }, __jsx(\"input\", {\n        type: \"text\",\n        placeholder: \"buscar ciudad\",\n        onChange: function onChange(e) {\n          return _this2.filterZones(e);\n        },\n        value: inputValue\n      }), __jsx(\"ul\", null, zones.map(function (zone, index) {\n        return __jsx(\"li\", {\n          key: index,\n          onClick: function onClick() {\n            return _this2.handleChange(index);\n          }\n        }, zone);\n      }))));\n    }\n  }]);\n\n  return SelectZone;\n}(React.Component);\n\n;\nexport default SelectZone;","map":{"version":3,"sources":["/Users/chia/Desktop/pedidos-ya/components/SelectZone/index.js"],"names":["React","styles","SelectZone","props","zones","state","selectedZone","active","inputValue","fetch","getZones","json","getZonesJson","console","log","currentState","setState","position","e","value","target","result","filter","z","toLowerCase","indexOf","selectedZoneContainer","handleClick","listContainer","visible","filterZones","map","zone","index","handleChange","Component"],"mappings":"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","sourcesContent":["import React from 'react';\nimport styles from './styles.scss';\n\n\nclass SelectZone extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.zones = ['Capital Federal', 'Zona Norte', 'Zona Sur', 'Campana'];\n\n    this.state = {\n      selectedZone: this.zones[0],\n      active: false,\n      zones: this.zones,\n      inputValue: '',\n    };\n  }\n\n  async componentDidMount() {\n    const getZones = await fetch('http://localhost:3000/api/zones');\n    const getZonesJson = await getZones.json();\n    console.log('zonas', getZonesJson)\n\n  }\n\n  handleClick() {\n    const currentState = this.state.active;\n    this.setState({\n      active: !currentState,\n    });\n  }\n\n  handleChange(position) {\n    this.setState({\n      selectedZone: this.zones[position],\n      active: false,\n      inputValue: \"\",\n      zones: this.zones,\n    })\n  }\n\n  filterZones (e) {\n    const value = e.target.value;\n    const  result = this.state.zones.filter(z => z.toLowerCase().indexOf(value.toLowerCase()) > -1);\n    this.setState({\n      inputValue: value,\n      zones: result,\n    }) \n  }\n\n  render() {\n    const { selectedZone, active, zones, inputValue } = this.state\n    return (\n      <div className={styles.selectedZoneContainer}>\n        <div className={styles.selectedZone} onClick={() => this.handleClick()}>\n          <span>{selectedZone}</span>\n        </div>\n        <div className={\n          active\n            ? `${styles.listContainer} ${styles.visible}`\n            : styles.listContainer\n        }\n        >\n          <input \n          type=\"text\" \n          placeholder=\"buscar ciudad\" \n          onChange={(e)=> this.filterZones(e)}\n          value={inputValue}\n          />\n          <ul>\n            {zones.map((zone, index) => {\n              return (\n                <li key={index} onClick={() => this.handleChange(index)}>{zone}</li>\n              )\n            })}\n          </ul>\n        </div>\n      </div>\n    )\n  }\n};\n\nexport default SelectZone;"]},"metadata":{},"sourceType":"module"}