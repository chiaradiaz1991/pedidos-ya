{"ast":null,"code":"var __jsx = React.createElement;\nimport React from 'react';\nimport styles from './styles.scss';\n\nclass SelectZone extends React.Component {\n  constructor(props) {\n    super(props);\n    this.zones = ['Capital Federal', 'Zona Norte', 'Zona Sur', 'Campana'];\n    this.state = {\n      selectedZone: this.zones[0],\n      active: false,\n      zones: this.zones,\n      inputValue: ''\n    };\n  }\n\n  async componentDidMount() {\n    const getZones = await fetch('http://localhost:3000/api/zones');\n    const getZonesJson = await getZones.json();\n    this.setState({\n      selectedZone: getZonesJson.length > 0 ? getZonesJson[0].name : '',\n      zones: getZonesJson\n    });\n  }\n\n  handleClick() {\n    const currentState = this.state.active;\n    this.setState({\n      active: !currentState\n    });\n  }\n\n  handleChange(position) {\n    this.setState({\n      selectedZone: this.zones[position],\n      active: false,\n      inputValue: \"\",\n      zones: this.zones\n    });\n  }\n\n  filterZones(e) {\n    const value = e.target.value;\n    const result = this.state.zones.filter(z => z.toLowerCase().indexOf(value.toLowerCase()) > -1);\n    this.setState({\n      inputValue: value,\n      zones: result\n    });\n  }\n\n  render() {\n    const {\n      selectedZone,\n      active,\n      zones,\n      inputValue\n    } = this.state;\n    return __jsx(\"div\", {\n      className: styles.selectedZoneContainer\n    }, __jsx(\"div\", {\n      className: styles.selectedZone,\n      onClick: () => this.handleClick()\n    }, __jsx(\"span\", null, selectedZone)), __jsx(\"div\", {\n      className: active ? `${styles.listContainer} ${styles.visible}` : styles.listContainer\n    }, __jsx(\"input\", {\n      type: \"text\",\n      placeholder: \"buscar ciudad\",\n      onChange: e => this.filterZones(e),\n      value: inputValue\n    }), __jsx(\"ul\", null, zones.name.map((zone, index) => {\n      return __jsx(\"li\", {\n        key: index,\n        onClick: () => this.handleChange(index)\n      }, zone);\n    }))));\n  }\n\n}\n\n;\nexport default SelectZone;","map":{"version":3,"sources":["/Users/chia/Desktop/pedidos-ya/components/SelectZone/index.js"],"names":["React","styles","SelectZone","Component","constructor","props","zones","state","selectedZone","active","inputValue","componentDidMount","getZones","fetch","getZonesJson","json","setState","length","name","handleClick","currentState","handleChange","position","filterZones","e","value","target","result","filter","z","toLowerCase","indexOf","render","selectedZoneContainer","listContainer","visible","map","zone","index"],"mappings":"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","sourcesContent":["import React from 'react';\nimport styles from './styles.scss';\n\n\nclass SelectZone extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.zones = ['Capital Federal', 'Zona Norte', 'Zona Sur', 'Campana'];\n\n    this.state = {\n      selectedZone: this.zones[0],\n      active: false,\n      zones: this.zones,\n      inputValue: '',\n    };\n  }\n\n  async componentDidMount() {\n    const getZones = await fetch('http://localhost:3000/api/zones');\n    const getZonesJson = await getZones.json();\n\n    this.setState({\n      selectedZone: getZonesJson.length > 0 ? getZonesJson[0].name : '',\n      zones: getZonesJson,\n    })\n  }\n\n  handleClick() {\n    const currentState = this.state.active;\n    this.setState({\n      active: !currentState,\n    });\n  }\n\n  handleChange(position) {\n    this.setState({\n      selectedZone: this.zones[position],\n      active: false,\n      inputValue: \"\",\n      zones: this.zones,\n    })\n  }\n\n  filterZones (e) {\n    const value = e.target.value;\n    const  result = this.state.zones.filter(z => z.toLowerCase().indexOf(value.toLowerCase()) > -1);\n    this.setState({\n      inputValue: value,\n      zones: result,\n    }) \n  }\n\n  render() {\n    const { selectedZone, active, zones, inputValue } = this.state\n    return (\n      <div className={styles.selectedZoneContainer}>\n        <div className={styles.selectedZone} onClick={() => this.handleClick()}>\n          <span>{selectedZone}</span>\n        </div>\n        <div className={\n          active\n            ? `${styles.listContainer} ${styles.visible}`\n            : styles.listContainer\n        }\n        >\n          <input \n          type=\"text\" \n          placeholder=\"buscar ciudad\" \n          onChange={(e)=> this.filterZones(e)}\n          value={inputValue}\n          />\n          <ul>\n            {zones.name.map((zone, index) => {\n              return (\n                <li key={index} onClick={() => this.handleChange(index)}>{zone}</li>\n              )\n            })}\n          </ul>\n        </div>\n      </div>\n    )\n  }\n};\n\nexport default SelectZone;"]},"metadata":{},"sourceType":"module"}